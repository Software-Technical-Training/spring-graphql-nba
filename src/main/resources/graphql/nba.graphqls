type Player {
    id: ID!
    name: String!
    age: Int
    height: String
    position: Position!
}

type Team {
    id: ID!
    name: String!
    city: String!
    arena: String
    founded: String
    owner: String
    coach: String!
    players: [Player!]!
}

type Query {
    teams : [Team!]!
    team(teamId: ID) : Team
    players(teamId : ID) : [Player]! 
    player(playerId : ID) : Player
}

type Mutation {
    createPlayer(name: String, position: Position) : Int
    createTeam(name: String, coach: String, city: String): Int
}

enum Position {
    FORWARD
    CENTER
    GUARD
}



